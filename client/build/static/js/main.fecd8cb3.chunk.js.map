{"version":3,"sources":["components/userWindow.js","utils/geolocation.js","components/form.js","components/messageWindow.js","components/chatPage.js","components/home.js","App.js","index.js"],"names":["UserWindow","socket","useState","room","setRoom","userList","setUserList","useEffect","on","className","map","user","username","id","shareLocation","navigator","geolocation","alert","getCurrentPosition","position","emit","latitude","coords","longitude","console","log","Form","msg","setMsg","onSubmit","e","preventDefault","res","value","placeholder","autoComplete","onChange","target","required","type","onClick","MessageWindow","chat","setChat","autoscroll","$messageWindow","document","querySelector","$newMessage","lastElementChild","newMessageMargin","parseInt","getComputedStyle","marginBottom","newMessageHeight","offsetHeight","visibleHeight","scrollHeight","scrollTop","msgObj","prevState","index","createdAt","href","qs","require","ChatPage","location","parse","search","history","useHistory","error","goBack","Home","setUsername","requried","to","pathname","io","App","path","exact","render","props","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fecd8cb3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/userWindow.css';\r\n\r\nconst UserWindow = ({socket}) => {\r\n    const [room,setRoom]=useState();\r\n    const [userList,setUserList]=useState([]);\r\n\r\n    const renderUserList=()=>{\r\n        return userList.map((user)=>{\r\n            return <li key={user.id}>{user.username}</li>\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        socket.on('roomData',({room,userList})=>{\r\n            setRoom(room);\r\n            setUserList(userList);\r\n        })\r\n    },[])\r\n    return (\r\n        <div className=\"userWindow\">\r\n            <h2 className=\"room\">{room}</h2>\r\n            <h3 className=\"listTitle\">Users</h3>\r\n            <ul className=\"users\">\r\n                {renderUserList()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserWindow\r\n","const shareLocation = (socket) => {\r\n  if (!navigator.geolocation)\r\n    return alert(\"Geolocation is not supported by your browser.\");\r\n  navigator.geolocation.getCurrentPosition((position) => {\r\n    socket.emit(\r\n      \"shareLocation\",\r\n      {\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n      },\r\n      () => console.log(\"Location Shared.\")\r\n    );\r\n  });\r\n};\r\nexport default shareLocation;\r\n","import React, { useState } from \"react\";\r\nimport shareLocation from \"../utils/geolocation\";\r\nimport '../styles/form.css';\r\n\r\nconst Form = ({socket }) => {\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const msgSubmit = (event) => {\r\n    event.preventDefault();\r\n    socket.emit(\"sendMessage\", msg, (res) => console.log(res));\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={(e) => msgSubmit(e)}>\r\n      <input\r\n        id=\"msgInput\"\r\n        value={msg}\r\n        placeholder=\"Message...\"\r\n        autoComplete=\"off\"\r\n        onChange={(e) => setMsg(e.target.value)}\r\n        required={true}\r\n      />\r\n      <button className=\"btn send\" type=\"submit\">Send</button>\r\n      <button className=\"btn location\" type=\"button\" onClick={() => shareLocation(socket)}>Share Location</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./form\";\r\nimport \"../styles/messageWindow.css\";\r\n\r\nconst MessageWindow = ({ socket }) => {\r\n  const [chat, setChat] = useState([]);\r\n  const renderChat = () => {\r\n    return chat.map(({ msg, username, createdAt, type }, index) => {\r\n      return (\r\n        <div key={index} className=\"message\">\r\n          <div className=\"message--header\">\r\n            <span className=\"header--name\">{username}</span>\r\n            <span className=\"header--meta\">{createdAt}</span>\r\n          </div>\r\n          {type === \"text\" ? (\r\n            <p>{msg}</p>\r\n          ) : (\r\n            <a href={msg} target=\"blank\">\r\n              My Current Location\r\n            </a>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const autoscroll = () => {\r\n    //getting the messageWindow\r\n    const $messageWindow = document.querySelector(\".messageWindow\");\r\n\r\n    //getting new Message Element\r\n    const $newMessage = $messageWindow.lastElementChild;\r\n\r\n    //height of last Message\r\n    const newMessageMargin = parseInt(\r\n      getComputedStyle($newMessage).marginBottom\r\n    );\r\n    const newMessageHeight = $newMessage.offsetHeight + newMessageMargin;\r\n\r\n    //visible height\r\n    const visibleHeight = $messageWindow.offsetHeight;\r\n\r\n    //messageWindow full height\r\n    const containerHeight = $messageWindow.scrollHeight;\r\n\r\n    //offset height from top\r\n    const scrollOffset = $messageWindow.scrollTop + visibleHeight;\r\n\r\n    if (containerHeight - newMessageHeight <= scrollOffset)\r\n      $messageWindow.scrollTop = $messageWindow.scrollHeight;\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (msgObj) => {\r\n      setChat((prevState) => [...prevState, { ...msgObj, type: \"text\" }]);\r\n      autoscroll();\r\n    });\r\n\r\n    socket.on(\"locationMessage\", (msgObj) => {\r\n      setChat((prevState) => [...prevState, { ...msgObj, type: \"link\" }]);\r\n      autoscroll();\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"chat-main\">\r\n      <div className=\"messageWindow\">{renderChat()}</div>\r\n      <Form socket={socket} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageWindow;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserWindow from './userWindow';\r\nimport MessageWindow from './messageWindow';\r\n\r\nimport '../styles/chatPage.css';\r\n\r\nconst qs=require('query-string');\r\n\r\n\r\nconst ChatPage = ({location,socket}) => {\r\n    const {username,room}= qs.parse(location.search)\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        socket.emit('join',{username,room},(error)=>{\r\n            if(error){\r\n                alert(error);\r\n                // history.push('/');\r\n                history.goBack();\r\n            }\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"chatPage\">\r\n            <UserWindow socket={socket}/>\r\n            <MessageWindow socket={socket} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage\r\n","import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../styles/home.css';\r\n\r\nconst Home = () => {\r\n    const [username,setUsername]=useState('');\r\n    const [room,setRoom]=useState('');\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <form className=\"joiningForm\">\r\n                <h1>Join</h1>\r\n                <label>username</label>\r\n                <input type=\"text\" placeholder=\"username\" value={username} onChange={(e)=>setUsername(e.target.value)} required={true}/>\r\n                <label>Room</label>\r\n                <input type=\"text\" placeholder=\"Room\" value={room} onChange={(e)=>setRoom(e.target.value)} requried=\"true\" />\r\n                <Link className=\"btn join\" to={{\r\n                    pathname:\"/chatpage\",\r\n                    search:`?username=${username}&room=${room}`\r\n                }} >Join</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import \"./App.css\";\nimport io from \"socket.io-client\";\nimport ChatPage from \"./components/chatPage\";\nimport Home from \"./components/home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nconst socket = io();\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n      <Route\n          path=\"/chatpage\"\n          exact\n          render={props=><ChatPage {...props} socket={socket} />}\n      />\n      <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}